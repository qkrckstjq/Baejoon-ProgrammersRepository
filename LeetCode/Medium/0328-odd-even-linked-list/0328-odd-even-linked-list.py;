# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head == None or head.next == None:
            return head
        even_pointer = head
        start_even_pointer = even_pointer
        odd_pointer = head.next
        start_odd_pointer = odd_pointer
        
        pointer = head.next
        while pointer != None and pointer.next != None:
            even_pointer.next = pointer.next
            odd_pointer.next = pointer.next.next
            even_pointer = even_pointer.next
            odd_pointer = odd_pointer.next
            pointer = pointer.next
        even_pointer.next = start_odd_pointer
        return head
        
        
        
            
            
                
        